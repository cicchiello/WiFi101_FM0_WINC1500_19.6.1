/* Generated cpp File for ziggo for WINC1500 flash upload of x509 certificate */
/* Generated by: com.jfcenterprises.wifi101.GenWINC1500CertCPP */
#include "ziggo_winc1500cert.h"

#include "utility/certificate.h"


static tstrSystemTime validFrom = {2014, 6, 26, 12, 36, 18};
static tstrSystemTime validUntil = {2034, 6, 26, 12, 36, 18};

#define NAME_HASH_LEN 20
static uint8 nameHash[NAME_HASH_LEN] = {
    0x61, 0x1e, 0x4d, 0x9b, 0x7b, 0x11, 0xfd, 0xd2,
    0x76, 0x1d, 0xdb, 0xcd, 0x67, 0x51, 0x1c, 0x09,
    0x16, 0xef, 0x5b, 0xa2
};


#define EXPONENT_LEN 3
static uint8 exponentBuf[EXPONENT_LEN] = {0x01, 0x00, 0x01};
#define MODULUS_LEN 512
static uint8 pubkey[MODULUS_LEN] = {
    0xbe, 0xee, 0xf7, 0xda, 0x12, 0x8e, 0xd1, 0x47,
    0x29, 0xc8, 0xec, 0xdc, 0xd1, 0x4d, 0x8a, 0x88,
    0xc6, 0x0f, 0x28, 0xdc, 0x4c, 0x86, 0x26, 0xa3,
    0x03, 0x24, 0x28, 0xf1, 0x51, 0x58, 0x3f, 0x90,
    0x8c, 0x10, 0x3c, 0xb7, 0x51, 0xa4, 0x75, 0xd7,
    0x34, 0x0a, 0x9b, 0x04, 0xbd, 0xb7, 0x73, 0x2d,
    0x8e, 0xa8, 0x02, 0xb2, 0x58, 0x9a, 0x63, 0x13,
    0x6b, 0x23, 0x17, 0x78, 0xea, 0x75, 0xc1, 0xd5,
    0xdf, 0x18, 0xa0, 0x60, 0xbe, 0x75, 0xa2, 0x79,
    0xe8, 0x4d, 0x1f, 0x7f, 0x6f, 0xcc, 0x19, 0x50,
    0x8d, 0xbc, 0xb4, 0xf5, 0x4f, 0xe2, 0x2a, 0x6d,
    0x0e, 0xda, 0x93, 0x33, 0xc0, 0xae, 0x97, 0xa1,
    0xca, 0x4e, 0x87, 0xa0, 0xf2, 0xde, 0xfc, 0x67,
    0xca, 0xff, 0xd7, 0x75, 0x39, 0x2e, 0x2f, 0xa5,
    0x94, 0xd8, 0xab, 0xa1, 0x60, 0xb3, 0x99, 0xf1,
    0x55, 0x97, 0xf0, 0x09, 0x9b, 0x50, 0xde, 0x61,
    0x2a, 0x71, 0x2b, 0xe9, 0xbc, 0x00, 0xb1, 0x3b,
    0xe3, 0xe9, 0xa7, 0xce, 0x96, 0x83, 0x05, 0x3f,
    0x1c, 0xa7, 0x14, 0x77, 0x62, 0x29, 0x8a, 0xf7,
    0x13, 0xbe, 0x6b, 0x19, 0x40, 0xb9, 0x2b, 0x7b,
    0xbe, 0x1f, 0xb7, 0x5b, 0x27, 0x25, 0x9b, 0x6c,
    0x25, 0x26, 0x68, 0x14, 0xff, 0x18, 0x09, 0x0c,
    0x3e, 0x18, 0xfa, 0xda, 0xe3, 0xe2, 0x71, 0x62,
    0x31, 0x7c, 0xd5, 0x48, 0xdc, 0x44, 0x75, 0x70,
    0xac, 0x2f, 0x7c, 0xc5, 0x14, 0x2d, 0x83, 0x6e,
    0x27, 0xa8, 0x36, 0x18, 0xd1, 0x2c, 0xd7, 0x22,
    0x26, 0xad, 0x9e, 0xa4, 0xb5, 0x50, 0x0c, 0x32,
    0x88, 0x05, 0xd5, 0xd1, 0x87, 0xa2, 0x64, 0x7f,
    0x92, 0xe0, 0x00, 0xcf, 0xbd, 0xc7, 0xd3, 0xda,
    0x42, 0xc7, 0x82, 0x31, 0xcf, 0x14, 0x42, 0x58,
    0x22, 0x84, 0x7d, 0x0c, 0x9d, 0x91, 0x1c, 0x0f,
    0xcf, 0xee, 0x0c, 0xdd, 0xa2, 0x11, 0x1b, 0xbd,
    0x4e, 0x5b, 0x50, 0xe1, 0x64, 0xce, 0x29, 0x4b,
    0xcb, 0xb2, 0xae, 0x62, 0xb3, 0x05, 0x90, 0xc3,
    0x84, 0x3c, 0x12, 0x20, 0x1f, 0xf6, 0x68, 0x60,
    0x34, 0x86, 0x98, 0x54, 0x7f, 0x7f, 0xb7, 0x30,
    0x93, 0x67, 0xb6, 0xa8, 0xdd, 0x09, 0x67, 0x74,
    0x2c, 0xe9, 0x11, 0x75, 0xb7, 0x03, 0x8f, 0x6a,
    0xcd, 0x4a, 0x50, 0x36, 0xa4, 0x4d, 0xfe, 0x5d,
    0xb6, 0x2b, 0x28, 0x69, 0x7c, 0x7f, 0xaa, 0xbf,
    0xe5, 0x15, 0x5f, 0x52, 0x64, 0x21, 0x82, 0x40,
    0x5e, 0xc7, 0xcc, 0x21, 0x44, 0x20, 0x60, 0xf0,
    0xea, 0xe8, 0x0a, 0xf2, 0x8c, 0xe4, 0x00, 0xb9,
    0x85, 0x2c, 0xfe, 0x22, 0x45, 0xcf, 0x19, 0xc8,
    0x3d, 0xaa, 0xe3, 0x1d, 0xf7, 0xb6, 0x0e, 0x69,
    0x47, 0x57, 0xf0, 0xca, 0x81, 0x26, 0xeb, 0x55,
    0x32, 0x13, 0x2a, 0x5d, 0xe9, 0xa1, 0x87, 0xfd,
    0xc2, 0xcc, 0x33, 0x05, 0x9e, 0xb2, 0xd1, 0x93,
    0x7b, 0x84, 0x31, 0xfe, 0xa4, 0x0c, 0xf3, 0xce,
    0xfb, 0xb5, 0x0a, 0xc5, 0xb9, 0x7b, 0x76, 0x18,
    0x7f, 0x23, 0xd6, 0x26, 0xf6, 0x59, 0xae, 0xab,
    0x73, 0x4c, 0xe8, 0x42, 0xb4, 0xad, 0xd3, 0x17,
    0xa3, 0x2e, 0x3d, 0x00, 0xbc, 0x84, 0xfa, 0xab,
    0xf2, 0x84, 0x2b, 0xe3, 0x72, 0x15, 0x72, 0x5f,
    0x50, 0xe0, 0x03, 0xf9, 0x78, 0x16, 0x5c, 0x78,
    0x57, 0x19, 0x68, 0xa6, 0x8f, 0xa6, 0xea, 0x10,
    0xb5, 0x5c, 0xab, 0x48, 0xe3, 0x7e, 0xdb, 0x73,
    0xde, 0xfe, 0xf0, 0xcc, 0x4c, 0xfd, 0xc2, 0x9c,
    0x4c, 0xc7, 0xb9, 0xab, 0x2a, 0xb9, 0x6a, 0x48,
    0x55, 0xa6, 0xa4, 0x53, 0x9a, 0x70, 0xcd, 0x0c,
    0x47, 0x5a, 0x67, 0xbe, 0x19, 0x51, 0x82, 0xdb,
    0x6a, 0x62, 0x82, 0xb2, 0x3b, 0x8a, 0x4a, 0xb3,
    0x8d, 0xf2, 0x34, 0x1c, 0x9f, 0x76, 0xd0, 0x05,
    0x7f, 0x43, 0xd8, 0x98, 0x01, 0x68, 0x58, 0x47
};


const Certificate *ziggo_getCertificate()
{
  static Certificate certificate;
  static int initialized = 0;
  
  if (!initialized) {
    /* Load Certificate details into the struct */
    m2m_memcpy(certificate.nameHash, nameHash, CRYPTO_SHA1_DIGEST_SIZE);
    certificate.validFrom = validFrom;
    certificate.validUntil = validUntil;
    certificate.pubKeyType = X509_CERT_PUBKEY_RSA;
    certificate.pubkey.u16NSize = MODULUS_LEN;
    certificate.pubkey.u16ESize = EXPONENT_LEN;
    certificate.pubkey.pu8N = pubkey;
    certificate.pubkey.pu8E = exponentBuf;

    initialized = 1;
  }

  return &certificate;
}

/* Generated cpp File done */
